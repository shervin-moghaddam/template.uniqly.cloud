@mixin toggle-switch($class-color-name, $color-var, $type:"") {
  @if $type == "outline" {
    .toggle-switch.#{$class-color-name}.outline {
      input[type="checkbox"]:checked {
        background: var(--global-secondary);
        border: 1px solid var($color-var);

        &::after {
          background: var($color-var);
        }
      }
    }
  } @else {
    .toggle-switch.#{$class-color-name} {
      input[type="checkbox"]:checked {
        background: var($color-var);

        &::after {
          background: var(--toggle-switch-switch);
        }
      }
    }
  }
}

.uniqly {
  // Switch
  .toggle-switch {
    margin-top: 7px;
    margin-bottom: 7px;

    input[type="checkbox"] {
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 20px;
      width: 33px;
      outline: none;
      display: inline-block;
      vertical-align: top;
      position: relative;
      margin: 0;
      cursor: pointer;
      border: 1px solid var(--toggle-switch-border);
      transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;

      // outline
      &.outline {
        width: 38px;
        height: 20px;

        &::after {
          width: 24px;
          height: 24px;
          top: -2px;
          left: -2px;
        }

        &:checked {
          border: 1px solid var(--toggle-switch-border);
        }

        &:checked:after {
          background: var(--toggle-switch-border);
        }

        &:checked {
          background: none;
        }

        &:disabled {
          border: 1px solid var(--toggle-switch-disabled);

          &:checked::after {
            background: var(--toggle-switch-disabled);
          }
        }
      }

      &:after {
        content: "";
        display: block;
        left: 2px;
        top: 3px;
        right: 2px;
        position: absolute;
        transition: transform 0.3s ease,
        background-color 0.3s ease;
        //opacity var(--d-o, 0.2s);
      }

      &:checked:after {
        background-color: var(--white-color);
      }
     
      & + label {
        font-size: 14px;
        color: var(--gray-100);
        line-height: 21px;
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: 4px;
      }
    }

    .switch {
      width: 33px;
      border-radius: 11px;

      &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 12px;
        height: 12px;
        background: var(--gray-600);
        transform: translateX(var(--x, 0));
        
      }

      &:checked {
        --ab: var(--white-color);
        --x: 15px;
      }

      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: 0.6;
          }
        }
      }
    }

    &.md {
      input[type="checkbox"] {
        width: 45px;
        height: 26px;
      }

      .switch {
        border-radius: 800px;

        &::after {
          width: 18px;
          height: 18px;
          left: 3px;
        }

        &:checked {
          --x: 18px;
        }
      }
    }

    &.lg {
      input[type="checkbox"] {
        width: 57px;
        height: 32px;
      }

      .switch {
        border-radius: 800px;

        &::after {
          width: 24px;
          height: 24px;
          left: 3px;
        }

        &:checked {
          --x: 24px;
        }
      }
    }
  }

  // Outline color variation
  @include toggle-switch("turquoise", --global-turquoise, "outline");
  @include toggle-switch("red", --global-red, "outline");
  @include toggle-switch("yellow", --global-yellow, "outline");
  @include toggle-switch("green", --global-green, "outline");
  @include toggle-switch("blue", --global-blue, "outline");
  @include toggle-switch("primary", --global-primary, "outline");

  // Default color variation
  @include toggle-switch("turquoise", --global-turquoise);
  @include toggle-switch("red", --global-red);
  @include toggle-switch("yellow", --global-yellow);
  @include toggle-switch("green", --global-green);
  @include toggle-switch("blue", --global-blue);
  @include toggle-switch("primary", --global-primary);
}